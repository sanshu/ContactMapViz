"use strict";function ContactMap(t){d3.select(t).html('<div class="row px-3" style="width:100%">'+this.buttonsHTML+this.alertHTML+"</div>"+this.cmHTML+this.tooltipHTML),this.hideAlert(),this._parentId=t}function toggle(t){$("#"+t).fadeToggle()}ContactMap.prototype.buttonsHTML='<div class="col-6"><button type="button" class="btn btn-outline-primary btn-sm active mx-1"data-toggle="button" onclick="toggle(\'cmap1\')">First</button><button type="button" class="btn btn-outline-warning btn-sm active mx-1"  data-toggle="button" onclick="toggle(\'cmap2\')">Second</button><button type="button" class="btn btn-outline-danger btn-sm active mx-1"  data-toggle="button" onclick="toggle(\'cmapsum\')">Difference</button></div>',ContactMap.prototype.alertHTML='<div class="alert alert-light col-6" role="alert" id="alertbox">&nbsp;</div>',ContactMap.prototype.cmHTML='<div class="row"><div class="col-12"><div id="contactMaps"></div></div>',ContactMap.prototype.tooltipHTML='<div id="tooltip" class="hidden"><p><span id="value"></p></div></div>',ContactMap.prototype.clear=function(){this.hideAlert(),this._width=0,this.data=null,d3.select("svg").remove(),d3.select("#contactMaps").select("*").remove()},ContactMap.prototype.alert=function(t){d3.select("#alertbox").html(t)},ContactMap.prototype.hideAlert=function(){d3.select("#alertbox").html("")},ContactMap.prototype._parse=function(t){var e=t.matrix;try{var a,n,r,o,i=d3.dsvFormat("\t"),s=0,c=[],l=1,u=i.parseRows(e,function(t,e){o=+t[1],r=+t[3],s=Math.max(s,r,o),a=+t[1],n=t[0].substring(0,1),l=1==+t[4]?1:-1,c[o]||(c[o]=[]);var i=c[o][r];return i=i?i+l:l,c[o][r]=i,{id:e++,structure:{res1:t[0],col:o,res2:t[2],row:r,structId:+t[4],value:1}}});return{max:s,matrix:u,seq1:t.seq1,seq2:t.seq2,datasum:c}}catch(t){return this.alert("Wrong input format. Required format: [res1 gridX res2 gridY strustureId]"),null}},ContactMap.prototype.draw=function(t){if(this.clear(),null===t)return void this.alert("Input data is empty.");var e=parseInt(d3.select(this._parentId).style("padding-left")),a=parseInt(d3.select(this._parentId).style("padding-right"));this._width=parseInt(d3.select(this._parentId).style("width"))-e-a-15,this.data=this._parse(t),null!==this.data&&this._draw()},ContactMap.prototype._addSequences=function(t,e){if(this.data.seq1){var a=t.append("g").attr("class","g3").attr("id","sequences1").attr("text-anchor","middle").attr("alignment-baseline","middle").attr("font-size",1.2*e).selectAll(".seq").data(this.data.seq1,function(t){return t}).enter();a.append("text").attr("dx",function(t,a){return(a+.5)*e}).attr("dy",function(t){return 3*-e}).text(function(t,e){return t}),a.append("text").attr("dy",function(t,a){return(a+1)*e}).attr("dx",function(t){return 3*-e}).text(function(t,e){return t})}this.data.seq2&&(a=t.append("g").attr("class","g3").attr("id","sequences2").attr("text-anchor","middle").attr("alignment-baseline","middle").attr("font-size",1.2*e).selectAll(".seq").data(this.data.seq2,function(t){return t}).enter(),a.append("text").attr("dx",function(t,a){return(a+.5)*e}).attr("dy",function(t){return-e}).text(function(t){return t}),a.append("text").attr("dy",function(t,a){return(a+1)*e}).attr("dx",function(t){return-e}).text(function(t,e){return t}))},ContactMap.prototype._createCMap=function(t,e,a,n,r){var o=this,i=a.append("g").attr("class","g3").attr("id",e).selectAll(".cellg").data(t,function(t){return t.row+":"+t.col}).enter();i.append("rect").attr("x",function(t){return t.col*n}).attr("y",function(t){return t.row*n}).attr("class",function(t){return"cell cell-border cr"+(t.row-1)+" cc"+(t.col-1)}).attr("width",n).attr("height",n).style("opacity",.7).style("fill",r).on("mouseover",function(t){o._createTooltip(t,o)}).on("mouseout",function(){d3.select("#tooltip").classed("hidden",!0)}),i.insert("rect").attr("y",function(t){return t.col*n}).attr("x",function(t){return t.row*n}).attr("class",function(t){return"cell cell-border cr"+(t.row-1)+" cc"+(t.col-1)}).attr("width",n).attr("height",n).style("opacity",.7).style("fill",r).on("mouseover",function(t){o._createTooltip(t,o)}).on("mouseout",function(){d3.select("#tooltip").classed("hidden",!0)})},ContactMap.prototype._getTooltipText=function(t,e){var a="",n="";if(this.data.seq1){a="CM1["+this.data.seq1[t]+(t+1)+":"+this.data.seq1[e]+(e+1)+"]"}if(this.data.seq2){n="CM2["+this.data.seq2[t]+(t+1)+":"+this.data.seq2[e]+(e+1)+"]"}return a.length>0||n.length>0?a+", "+n:a+n},ContactMap.prototype._createTooltip=function(t,e){d3.select("#tooltip").style("left",d3.event.pageX+10+"px").style("top",d3.event.pageY-10+"px").select("#value").text(e._getTooltipText(t.row,t.col)),d3.select("#tooltip").classed("hidden",!1)},ContactMap.prototype._draw=function(){function t(){h=d3.event.transform,_.attr("transform",h),M.call(y.scale(d3.event.transform.rescaleX(v))),w.call(b.scale(d3.event.transform.rescaleY(x)))}function e(t){f.scaleTo(m,d3.select(this).property("value"))}var a=this.data.matrix.filter(function(t){return 1===t.structure.structId&&t.structure.value>0}).map(function(t){return{row:t.structure.row,col:t.structure.col,value:t.structure.value,id:t.id}}),n=this.data.matrix.filter(function(t){return 2===t.structure.structId&&t.structure.value>0}).map(function(t){return{row:t.structure.row,col:t.structure.col,value:t.structure.value,id:t.id}}),r=[];this.data.datasum.forEach(function(t,e){t.forEach(function(t,a){0!==t&&r.push({row:e,col:a,value:t})})}),this.alert("There are "+r.length+" non-matching contacts.");var o=this._width||400,i=this.data.max,s=i,c={top:50,right:20,bottom:20,left:50},l=o-c.left-c.right,u=l/i,d=l,p=l,h=null,f=d3.zoom().scaleExtent([.75,5]).translateExtent([[-20,-20],[d+40,p+40]]).on("zoom",t),m=(d3.select("#contactMaps").append("input").datum({}).attr("type","range").attr("value",1).attr("min",f.scaleExtent()[0]).attr("max",f.scaleExtent()[1]).attr("step",(f.scaleExtent()[1]-f.scaleExtent()[0])/100).on("input",e),d3.select("#contactMaps").append("svg").attr("width",d+c.left+c.right).attr("height",d+c.top+c.bottom)),g=m.append("g").attr("transform","translate("+c.left+","+c.top+")"),v=d3.scaleLinear().domain([0,i]).range([0,d]),x=d3.scaleLinear().domain([0,s]).range([0,p]),y=d3.axisBottom(v).ticks((d+2)/(p+2)*10).tickSize(p).tickPadding(-8-p),b=d3.axisRight(x).ticks(10).tickSize(d).tickPadding(-d-18),M=g.append("g").attr("class","axis axis--x").call(y),w=g.append("g").attr("class","axis axis--y").call(b),_=g.append("g").attr("class","view");this._addSequences(_,u),this._createCMap(a,"cmap1",_,u,function(t){return"#007bff"}),this._createCMap(n,"cmap2",_,u,function(t){return"#ffc107"}),this._createCMap(r,"cmapsum",_,u,function(t){return t.value>0?"#D50000":"#28a745"}),h&&_.attr("transform",h),m.call(f).on("wheel.zoom",null).on("dblclick.zoom",null)};